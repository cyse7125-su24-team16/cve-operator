apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-cve-operator.fullname" . }}-controller-manager
  namespace: {{ .Values.namespace }}
  labels:
    control-plane: controller-manager
    {{- include "helm-cve-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "helm-cve-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        {{- include "helm-cve-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      serviceAccountName: controller-manager-sa
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: control-plane
                operator: In
                values:
                - controller-manager
            topologyKey: kubernetes.io/hostname
      containers:
      - name: manager
        image: "{{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag }}"
        imagePullPolicy: Always
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain | quote }}
        - name: KAFKA_USERNAME
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_USERNAME
        - name: KAFKA_BROKER1
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BROKER1
        - name: KAFKA_BROKER2
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BROKER2
        - name: KAFKA_BROKER3
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BROKER3
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_TOPIC
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-credentials
              key: KAFKA_PASSWORD
        - name: PROCESS_IMAGE
          value: {{ .Values.controllerManager.manager.env.PROCESS_IMAGE | quote }}
        resources:
          requests:
            cpu: {{ .Values.controllerManager.manager.resources.requests.cpu }}
            memory: {{ .Values.controllerManager.manager.resources.requests.memory }}
          limits:
            cpu: {{ .Values.controllerManager.manager.resources.limits.cpu }}
            memory: {{ .Values.controllerManager.manager.resources.limits.memory }}
        securityContext:
          {{- toYaml .Values.controllerManager.manager.containerSecurityContext | nindent 10 }}
